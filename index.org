#+SETUPFILE: ./post/html_header.org
#+TITLE: HO YOUNG의 Recording
#+AUTHOR:  HO YOUNG
#+OPTIONS: html-list-type:unordered num:nil toc:2 H:5
* 환경
** Macbook
   - Macbook Air(M1),  macOS 14.6.1
** EMACS
   - emacs-version: 31.0.50,  자체 컴파일
   - org-version : 9.7.10
* 로그
** github.io 시작
*** Create a repository
    - username.github.io
    - 나머지는 기본값 유지
*** Clone the repository
    #+begin_src 
    - git clone git@github.com:username/username.github.io
    #+end_src
*** add an index.html file
    #+begin_src
    - cd username.github.io
    - echo "Hello World" > index.html
    #+end_src
*** Push it
    #+begin_src 
    - git add --all
    - git commit -m "Initial commit"
    - git push -u origin main
    #+end_src
** 한글맞춤법  for macOS
*** hunspell 설치
    #+begin_src 
    brew install hunspell
    #+end_src
*** 한국어 사전 다운로드
    https://github.com/spellcheck-ko/hunspell-dict-ko/releases
    - ko-aff-dic-0.7.94.zip 파일 다운로드
*** 사전 파일 설치
    다운로드한 사전 파일을 Hunspell이 인식할 수 있는 디렉토리에 복사. 보통 ~/Library/Spelling/ 디렉토리를 사용
    #+begin_src 
    mkdir -p ~/Library/Spelling
    cp hunspell-dict-ko/ko.dic ~/Library/Spelling/ko_KR.dic
    cp hunspell-dict-ko/ko.aff ~/Library/Spelling/ko_KR.aff
    #+end_src
*** Emacs 설정
    - ( ~/.emacs.d/init.el)에 Hunspell과 한국어 사전을 사용할 수 있도록 설정
    #+begin_src 
    ;; Hunspell 설정
    (setq ispell-program-name "hunspell")
    (setq ispell-local-dictionary "ko_KR")
    (setq ispell-local-dictionary-alist
    '(("ko_KR" "[가-힣]" "[^가-힣]" "[-']" nil ("-d" "ko_KR") nil utf-8)))
    ;; Flyspell 모드 활성화
    (add-hook 'text-mode-hook 'flyspell-mode)
    (add-hook 'prog-mode-hook 'flyspell-prog-mode)
    #+end_src
    
    #+begin_src 
    ;; use-package 사용 예
    (use-package ispell
      :config
    (setq ispell-program-name "hunspell")
    (setq ispell-local-dictionary "ko_KR")
    (setq ispell-local-dictionary-alist
         '(("ko_KR" "[가-힣]" "[^가-힣]" "[-']" nil ("-d" "ko_KR") nil utf-8))))
    #+end_src
*** flyspell 모드 사용
    - Emacs에서 Flyspell 모드를 사용하여 실시간 맞춤법 검사. 텍스트 모드나 프로그래밍 모드에서 자동 활성화
*** 한글맞춤법 수동검사
    #+begin_src 
    ;; 맞춤법 검사 - 수동 검사
    (defun my-hunspell-check ()
    "Run Hunspell spell check on the current buffer."
    (interactive)
    (ispell-buffer))
    #+end_src
** Github 경험
   - 새 저장소 생성: Github.com/hy36370637/Docs.git (private 계정. 유료)
   - cd ~/Dropbox/Docs
   - repository 만든 후 안내 내용
    
   #+begin_src 
     $ echo "# Docs" >> README.md
     $ git init
     $ git add README.md   → git add .
     $ git commit -m "first commit"
     $ git branch -M main
     $ git remote add origin git@github.com:hy36370637/Docs.git
     $ git push -u origin main
   #+end_src
** emacs 함수
   - 문장 끝의 줄바꿈 표시를 공백으로 대체하여 문장을 연결하고 빈 줄은 유지하는 함수
   #+begin_src emacs-lisp
(defun my/remove-line-endings-keep-empty-lines (&optional start end)
  "문장 끝의 줄바꿈을 공백으로 대체하여 문장 연결, 연속된 빈 줄을 하나로 줄여 유지"
  (interactive)
  (let* ((use-region (use-region-p))
         (start (if use-region (region-beginning) (point-min)))
         (end (if use-region (region-end) (point-max))))
    (save-excursion
      (save-restriction
        (narrow-to-region start end)
        (goto-char (point-min))
        (while (re-search-forward "\\([^\n]\\)\\(\n\\)\\([^\n]\\)" nil t)
          (replace-match "\\1 \\3"))
        (goto-char (point-min))
        (while (re-search-forward "\n\n+" nil t)
          (replace-match "\n\n"))))))
    #+end_src
